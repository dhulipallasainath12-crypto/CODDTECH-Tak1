import org.apache.mahout.cf.taste.common.TasteException;
import org.apache.mahout.cf.taste.impl.model.file.FileDataModel;
import org.apache.mahout.cf.taste.impl.recommender.GenericItemBasedRecommender;
import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;
import org.apache.mahout.cf.taste.model.DataModel;
import org.apache.mahout.cf.taste.recommender.RecommendedItem;
import org.apache.mahout.cf.taste.recommender.Recommender;
import org.apache.mahout.cf.taste.similarity.ItemSimilarity;

import java.io.File;
import java.util.List;

public class RecommenderExample {
    
    public static void main(String[] args) throws Exception {
        // Load user preferences from CSV file
        DataModel model = new FileDataModel(new File("preferences.csv"));
        
        // Define similarity algorithm between items
        ItemSimilarity similarity = new PearsonCorrelationSimilarity(model);
        
        // Create recommendation engine
        Recommender recommender = new GenericItemBasedRecommender(model, similarity);
        
        // Generate 3 recommendations for user 1
        List<RecommendedItem> recommendations = recommender.recommend(1, 3);
        
        // Display recommendations
        System.out.println("Recommendations for User 1:");
        for (RecommendedItem recommendation : recommendations) {
            System.out.println("Item: " + recommendation.getItemID() + 
                             " - Estimated preference: " + recommendation.getValue());
        }
    }
}
